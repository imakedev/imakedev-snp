<?xml version="1.0"  encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
		xmlns:p="http://www.springframework.org/schema/p" xmlns:context="http://www.springframework.org/schema/context"
		xmlns:jee="http://www.springframework.org/schema/jee" xmlns:tx="http://www.springframework.org/schema/tx"
		xsi:schemaLocation="
			http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-2.5.xsd
			http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-2.5.xsd
			http://www.springframework.org/schema/jee http://www.springframework.org/schema/jee/spring-jee-2.5.xsd
			http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-2.5.xsd">
  
	<!-- ========================= RESOURCE DEFINITIONS ========================= -->

	<!-- Configurer that replaces ${...} placeholders with values from a properties file -->
	<!-- (in this case, JDBC-related settings for the dataSource definition below) -->
	<!-- 
	<context:property-placeholder location="classpath:jdbc.properties"/>
 	-->
	<!--
		Uses Apache Commons DBCP for connection pooling. See Commons DBCP documentation
		for the required JAR files. Alternatively you can use another connection pool
		such as C3P0, similarly configured using Spring.
	--> 
	<!-- 
	<bean id="dataSourceFactory" class="org.apache.commons.dbcp.BasicDataSource" destroy-method="close"
			p:driverClassName="${jdbc.driverClassName}" p:url="${jdbc.url}" p:username="${jdbc.username}"
			p:password="${jdbc.password}"/> snp-dwh ,aoe2
	-->
	<!--  
	<bean id="dataSourceFactory" class="org.apache.commons.dbcp.BasicDataSource" destroy-method="close"
			p:driverClassName="com.mysql.jdbc.Driver" p:url="jdbc:mysql://localhost:3306/aoe4" p:username="root"
			p:password=""/>
	-->
  <bean id="dataSourceFactory" class="org.apache.commons.dbcp.BasicDataSource" destroy-method="close"
			p:driverClassName="com.mysql.jdbc.Driver" p:url="jdbc:mysql://localhost:3306/BILL_CYCLE_DB?useEncoding=true&amp;characterEncoding=UTF-8" p:username="root"
			p:password="015482543a6e"/>
			
    <!--
	<bean id="dataSourceFactory" class="org.apache.commons.dbcp.BasicDataSource" destroy-method="close"
			p:driverClassName="com.mysql.jdbc.Driver" p:url="jdbc:mysql://localhost:3306/snp" p:username="root"
			p:password="015482543a6e"/>
-->
	<!-- JNDI DataSource for JEE environments -->
        <!--
		<jee:jndi-lookup id="dataSource" jndi-name="java:/comp/env/jdbc/localOracle" resource-ref="true"/>
    	
		
		<jee:jndi-lookup id="dataSource" jndi-name="jdbc/localOracle"/>
	 -->
	   <!--  
	 <jee:jndi-lookup id="dataSource" resource-ref="true" jndi-name="jdbc/localOracle"/>
	  -->
	<bean id="sessionAnnotationFactory" class="org.springframework.orm.hibernate3.annotation.AnnotationSessionFactoryBean"
	p:dataSource-ref="dataSourceFactory" >
	<!-- 
  		 <property name="dataSource" ref="dataSource"/>
  		  -->
  		 <property name="hibernateProperties">
			<props>
				<prop key="hibernate.dialect">org.hibernate.dialect.MySQLDialect</prop>
				<prop key="hibernate.show_sql">true</prop>
				<prop key="hibernate.generate_statistics">true</prop>		
				<prop key="hibernate.connection.autocommit">false</prop>
				<prop key="hibernate.connection.characterEncoding">UTF-8</prop>
				<!--
				  <prop key=" hibernate.hbm2ddl.auto">create</prop>				
				  hibernate.hbm2ddl.auto update | create | create-drop  -->
			</props>	
		</property>
  		
   		 <property name="annotatedClasses">
     		<list>     		 
			</list>
   		</property>
   		<property name="eventListeners">
			<map>
				<entry key="merge">
					<bean class="org.springframework.orm.hibernate3.support.IdTransferringMergeEventListener"/>
				</entry>
			</map>
		</property> 
 	</bean> 	 
 
 	<bean id="transactionManager" class="org.springframework.orm.hibernate3.HibernateTransactionManager"
 		p:sessionFactory-ref="sessionAnnotationFactory"/>
 	 
	

	<!-- ========================= BUSINESS OBJECT DEFINITIONS ========================= -->

	<!--
		Activates various annotations to be detected in bean classes:
		Spring's @Required and @Autowired, as well as JSR 250's @Resource.
	-->
	<context:annotation-config/>

	<!--
		Instruct Spring to perform declarative transaction management
		automatically on annotated classes.
	-->
	  <!-- 
	<tx:annotation-driven/>
	 
	 -->
	<tx:annotation-driven transaction-manager="transactionManager"/>
	
	<!--
		Exporter that exposes the Hibernate statistics service via JMX. Autodetects the
		service MBean, using its bean name as JMX object name.
	-->
	<context:mbean-export/>
	<!-- Poll's central data access object: Hibernate implementation -->
	
	<bean id="billCycleService" class="com.imake.lbs.service.impl.BillCycleServiceImpl">
		<property name="sessionAnnotationFactory" ref="sessionAnnotationFactory"></property>
	</bean> 
</beans>
